Project ask_markov {
    database_type: 'PostgreSQL'
    Note: 'Homework for tp 2024'
}

Table question {
  id bigint [pk, increment]
  user_id int
  title varchar(255) [not null]
  content text [not null]
  created_timestamp datetime [default: 'now()']
  updated_timestamp datetime [default: 'now()']
}

Table profile {
  id bigint [pk, increment]
  avatar blob
}

Table tags {
  id bigint [pk, increment]
  name varchar [not null]
  created_timestamp datetime [default: 'now()']
}

Table answer {
  id bigint [pk, increment]
  content text [not null]
  question_id int
  user_id int
  created_timestamp datetime [default: 'now()']
  updated_timestamp datetime [default: 'now()']
}

Table question_tag {
  question_id int
  tag_id int
}

Table question_like {
  id bigint [pk, increment]
  user_id int
  question_id int
}

Table answer_like {
  id bigint [pk, increment]
  user_id int
  answer_id int
}

Table "django.contrib.auth.models".User {
  id bigint [pk, increment]
  first_name varchar [null]
  last_name varchar [null]
  username varchar [not null]
  created_timestamp datetime [default: 'now()']
}


Ref: "profile"."id" < "question"."user_id"

Ref: "question"."id" < "answer"."question_id"

Ref: "tags"."id" < "question_tag"."tag_id"

Ref: "question"."id" < "question_tag"."question_id"


Ref: "public"."profile"."id" - "django.contrib.auth.models"."User"."id"


Ref: "public"."profile"."id" < "public"."question_like"."user_id"

Ref: "public"."profile"."id" < "public"."answer_like"."user_id"

Ref: "public"."question"."id" < "public"."question_like"."question_id"

Ref: "public"."question"."id" < "public"."answer_like"."answer_id"